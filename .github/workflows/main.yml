name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Git repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Ensure history is available for git describe, etc.

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Dependencies
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y autoconf libtool nasm libiberty-dev:i386 libelf-dev:i386 libboost-dev:i386 libbsd-dev:i386 libunwind-dev:i386 lib32z1-dev libc6-dev-i386 linux-libc-dev:i386 g++-multilib
        pip install ambuild

    - name: Clone dependencies
      run: |
        mkdir -p ${{ github.workspace }}/alliedmodders
        cd ${{ github.workspace }}/alliedmodders
        git clone --recursive https://github.com/alliedmodders/sourcemod --depth 1 -b 1.11-dev
        git clone https://github.com/alliedmodders/hl2sdk --depth 1 -b sdk2013 hl2sdk-sdk2013
        git clone https://github.com/alliedmodders/hl2sdk --depth 1 -b tf2 hl2sdk-tf2
        git clone https://github.com/alliedmodders/hl2sdk --depth 1 -b css hl2sdk-css
        git clone https://github.com/alliedmodders/metamod-source --depth 1 -b 1.11-dev
        git clone https://github.com/alliedmodders/ambuild --depth 1

    - name: Prepare build environment
      run: |
        echo "export PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV
        source $HOME/.bashrc
        cd ${{ github.workspace }}/sigsegv-mvm
        git submodule update --init --recursive
        cd libs/udis86
        ./autogen.sh
        ./configure
        make
        cd ../../libs
        wget https://www.lua.org/ftp/lua-5.4.4.tar.gz
        tar -xf lua-*.tar.gz
        rm lua-*.tar.gz
        mv lua-* lua
        cd lua
        make MYCFLAGS='-m32' MYLDFLAGS='-m32'
        cd ../../

    - name: Build Release
      run: |
        cd ${{ github.workspace }}/sigsegv-mvm
        ./autoconfig.sh
        mkdir -p build/release
        cd build/release
        ambuild

    - name: Package Files
      run: |
        cd ${{ github.workspace }}/sigsegv-mvm/build/release
        ./multibuild.sh

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/release/*.zip
        token: ${{ secrets.GITHUB_TOKEN }}

